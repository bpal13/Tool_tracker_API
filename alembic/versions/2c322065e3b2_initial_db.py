"""Initial DB

Revision ID: 2c322065e3b2
Revises: 
Create Date: 2024-05-18 15:51:11.902509

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2c322065e3b2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('calibrations', 'calibration_by',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('calibrations', 'calibration_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('calibrations', 'next_calibration',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('calibrations', 'actual_deviation',
               existing_type=sa.VARCHAR(length=30),
               nullable=False)
    op.drop_constraint('users_email_key', 'users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('calibrations', 'actual_deviation',
               existing_type=sa.VARCHAR(length=30),
               nullable=True)
    op.alter_column('calibrations', 'next_calibration',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('calibrations', 'calibration_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('calibrations', 'calibration_by',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    # ### end Alembic commands ###
